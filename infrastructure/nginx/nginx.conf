events {
    worker_connections 1024;
}

http {
    # Upstream definitions - these point to your microservices
    upstream identity_service {
        server identity-service:80;
    }
    
    upstream contract_service {
        server contract-service:80;
    }
    
    upstream document_service {
        server document-service:80;
    }
    
    upstream notification_service {
        server notification-service:80;
    }
    
    upstream audit_service {
        server audit-service:80;
    }

    # Main server block
    server {
        listen 80;
        
        # Enable CORS for frontend
        add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Route authentication requests to Identity Service
        location /api/auth/ {
            proxy_pass http://identity_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route contract requests to Contract Service
        location /api/contracts/ {
            proxy_pass http://contract_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route document requests to Document Service
        location /api/documents/ {
            proxy_pass http://document_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route notification requests to Notification Service
        location /api/notifications/ {
            proxy_pass http://notification_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Route audit requests to Audit Service
        location /api/audit/ {
            proxy_pass http://audit_service/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 'API Gateway is healthy';
            add_header Content-Type text/plain;
        }
    }
}